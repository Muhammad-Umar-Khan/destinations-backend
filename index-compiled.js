(()=>{var e={52:(e,t,r)=>{const s=r(259)({accessToken:process.env.MAP_BOX_TOKEN}),n=r(13),a=r(394);e.exports={getPlaceById:async(e,t,r)=>{const{pid:s}=e.params;try{const e=await a.findById({_id:s});return e?t.status(200).json(e):r(new n(404,"Could not find any place"))}catch(e){return r(new n(404,"Failed to load place, try again!"))}},createPlace:async(e,t,r)=>{const{title:i,description:o,address:c,creator:d}=e.body,{path:u,filename:l}=e.file;let p;try{p=await s.forwardGeocode({query:c,limit:1}).send()}catch(e){return r(e)}const g=new a({title:i,description:o,image:u,fileName:l,address:c,location:{lat:p.body.features[0].geometry.coordinates[1],lng:p.body.features[0].geometry.coordinates[0]},creator:d});try{return await g.save(),t.status(201).json({message:"New place added",createdPlace:g})}catch(e){return r(new n(400,"Could't add place, try again!"))}},getPlaceByUserId:async(e,t,r)=>{const{uid:s}=e.params;try{const e=await a.find({creator:s}).populate("creator");return e&&0!==e.length?t.status(200).json(e):r(new n(404,"No place exist for this user"))}catch(e){return r(new n(404,"No such user exist"))}},updatePlace:async(e,t,r)=>{const{title:s,description:i}=e.body,{pid:o}=e.params;try{return await a.updateOne({_id:o},{$set:{title:s,description:i}}),t.status(202).json({message:"Updated successfully"})}catch(e){return r(new n(400,"Could't update palace"))}},deletePlace:async(e,t,r)=>{const{pid:s}=e.params;try{return await a.deleteOne({_id:s}),t.status(200).json({message:"Deleted successfully"})}catch(e){return r(new n(400,"Could't delete place"))}}}},425:(e,t,r)=>{const s=r(13),n=r(713),a=r(96),i=r(344),o=process.env.JWT_SECRET;e.exports={register:async(e,t,r)=>{const{firstName:c,lastName:d,email:u,password:l}=e.body,p=await n.findOne({email:u});if(p)return r(new s(409,"A user with this email already exist"));try{const e=await a.hash(l,12),r=new n({firstName:c,lastName:d,email:u,password:e}),s=i.sign({user:p._id,expiresIn:"24h"},o);return await r.save(),t.status(201).json({message:"User created successfully",newUser:r,token:s})}catch(e){return r(new s(400,"Could't register, try again"))}},login:async(e,t,r)=>{const{email:c,password:d}=e.body;try{const e=await n.findOne({email:c});if(!e)return r(new s(404,"User does not exist"));if(!await a.compare(d,e.password))return r(new s(400,"Credential failed"));const u=i.sign({user:e._id,expiresIn:"24h"},o);return t.status(200).json({message:"Logged in successful",user:e,token:u})}catch(e){return r(new s(500,"Internal server error"))}},getUsers:async(e,t,r)=>{try{const e=await n.find({});return e?t.status(200).json(e):r(new s(400,"No User exist"))}catch(e){return r(new s)}}}},27:(e,t,r)=>{const s=r(344),n=r(13),a=process.env.JWT_SECRET;e.exports=(e,t,r)=>{const{token:i}=e.get("authorization");return s.verify(i,a)?r():r(new n(401,"Please Login"))}},790:(e,t,r)=>{const s=r(506),n=r(13);e.exports=(e,t,r)=>{const a=s.object({email:s.string().email().required(),password:s.string().alphanum().min(6).required()}),{error:i}=a.validate(e.body);if(i){const e=i.details.map((e=>e.message)).join(",");return r(new n(422,e))}r()}},977:(e,t,r)=>{const s=r(506),n=r(13);e.exports=(e,t,r)=>{const a=s.object({title:s.string().required(),description:s.string().required(),address:s.string().required(),creator:s.string().alphanum().required()}),{error:i}=a.validate(e.body);if(i){const e=i.details.map((e=>e.message)).join(",");return r(new n(422,e))}r()}},3:(e,t,r)=>{const s=r(506),n=r(13);e.exports=(e,t,r)=>{const a=s.object({firstName:s.string().required(),lastName:s.string().required(),email:s.string().email().required(),password:s.string().alphanum().min(6).required()}),{error:i}=a.validate(e.body);if(i){const e=i.details.map((e=>e.message)).join(",");return r(new n(422,e))}r()}},394:(e,t,r)=>{const s=r(185),n=new s.Schema({title:{type:String,required:!0},description:{type:String,required:!0},image:{type:String,required:!0},fileName:{type:String,required:!0},address:{type:String,required:!0},location:{lat:{type:Number,required:!0},lng:{type:Number,required:!0}},creator:{type:s.Schema.Types.ObjectId,ref:"User"}}),a=new s.model("Place",n);e.exports=a},713:(e,t,r)=>{const s=r(185),n=new s.Schema({firstName:{type:String,required:!0},lastName:{type:String,required:!0},email:{type:String,required:!0,unique:!0},password:{type:String,required:!0}}),a=new s.model("User",n);e.exports=a},292:(e,t,r)=>{const s=r(860).Router(),n=r(13);s.all("*",((e,t,r)=>r(new n(404,"Page Not found")))),e.exports=s},581:(e,t,r)=>{const s=r(860).Router(),n=r(977),a=r(52),i=r(27),o=r(738),{storage:c,fileFilter:d}=r(499),u=o({storage:c,limits:{fileSize:5242880},fileFilter:d});s.get("/:pid",a.getPlaceById),s.get("/user/:uid",i,a.getPlaceByUserId),s.post("/",i,u.single("place_image"),n,a.createPlace),s.patch("/:pid",i,n,a.updatePlace),s.delete("/:pid",i,a.deletePlace),e.exports=s},233:(e,t,r)=>{const s=r(860).Router(),n=r(3),a=r(790),i=r(425);s.get("/",i.getUsers),s.post("/signup",n,i.register),s.post("/login",a,i.login),e.exports=s},13:e=>{class t extends Error{constructor(e,t){super(),this.code=e,this.message=t}}e.exports=t},499:(e,t,r)=>{const s=r(518).v2,{CloudinaryStorage:n}=r(652),a=r(13);s.config({cloud_name:process.env.CLOUD_NAME,api_key:process.env.CLOUDINARY_API_KEY,api_secret:process.env.CLOUDINARY_API_SECRET});const i=new n({cloudinary:s,params:{folder:"Destinations"}});e.exports={storage:i,cloudinary:s,fileFilter:(e,t,r)=>{const[s,n]=t.mimetype.split("/");n&&["jpeg","png","jpg"].includes(n)?r(null,!0):r(new a(400,"File Type not acceptable please choose file type 'jpeg','png','jpg'"),!1)}}},683:(e,t,r)=>{const s=r(185),n=process.env.DB_URL,a=s.connect(n,{useNewUrlParser:!0,useUnifiedTopology:!0}).then((()=>{console.log("DB Connected!")})).catch((e=>{console.log("Connection Error",e)}));e.exports=a},259:e=>{"use strict";e.exports=require("@mapbox/mapbox-sdk/services/geocoding")},96:e=>{"use strict";e.exports=require("bcrypt")},518:e=>{"use strict";e.exports=require("cloudinary")},860:e=>{"use strict";e.exports=require("express")},506:e=>{"use strict";e.exports=require("joi")},344:e=>{"use strict";e.exports=require("jsonwebtoken")},185:e=>{"use strict";e.exports=require("mongoose")},738:e=>{"use strict";e.exports=require("multer")},652:e=>{"use strict";e.exports=require("multer-storage-cloudinary")}},t={};function r(s){var n=t[s];if(void 0!==n)return n.exports;var a=t[s]={exports:{}};return e[s](a,a.exports,r),a.exports}(()=>{const e=r(860),t=r(581),s=r(233),n=r(292),a=(r(683),e());a.use(e.json()),a.use(e.urlencoded({extended:!0})),a.use("/",s),a.use("/api/places",t),a.use(n),a.use(((e,t,r,s)=>{if(r.headerSent)return s(e);r.status(e.code||500).json({message:e.message||"Internal server error ):"})})),a.listen(3001,(()=>{console.log("listening on port 3001")}))})()})();